apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api
  labels:
    {{- include "librechat.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "librechat.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        {{- include "librechat.labels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      containers:
        - name: api
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          env:
            - name: CREDS_KEY
              value: {{ .Values.credsKey }}
            - name: CREDS_IV
              value: {{ .Values.credsIv }}
            - name: JWT_SECRET
              value: {{ .Values.jwtSecret }}
            - name: JWT_REFRESH_SECRET
              value: {{ .Values.jwtRefreshSecret }}
            - name: MEILI_HOST
              value: http://{{ .Release.Name }}-meilisearch:7700
            - name: MEILI_MASTER_KEY
              value: librechat
            - name: MONGO_URI
              value: mongodb://{{ .Release.Name }}-mongodb:27017/librechat
            - name: RAG_API_URL
              value: http://{{ .Release.Name }}-rag:8000
            - name: ALLOW_EMAIL_LOGIN
              value: "true"
            - name: ALLOW_REGISTRATION
              value: "true"
          ports:
            - containerPort: 3080
          volumeMounts:
            - name: config
              mountPath: /app/librechat.yaml
              subPath: librechat.yaml
            - name: images
              mountPath: /app/client/public/images
            - name: uploads
              mountPath: /app/uploads
          livenessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /
              port: http
          readinessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /
              port: http
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-librechat
        - name: images
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-images
        - name: uploads
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-uploads
